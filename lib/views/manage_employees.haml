:javascript
  function encode_query_data(data)
  {
     var ret = [];
     for (var d in data)
        ret.push(encodeURIComponent(d) + "=" + encodeURIComponent(data[d]));
     return ret.join("&");
  }


  add_employee = function() {
    var employee_name = $(':input[id="new_employee_name"]').val();

    $.ajax({
      url: "/api/add_employee?" + encode_query_data({"employee_name": employee_name}),
      success: function(data) {
        employee_added(employee_name);
      },
    });
  }

  employee_added = function(employee_name) {
    window.location.reload();
  }


  del_employee = function(employee_name) {
    $.ajax({
      url: "/api/delete_employee?" + encode_query_data({"employee_name": employee_name}),
      success: function(data) {
        employee_deleted(employee_name);
      },
    });
  }

  employee_deleted = function(employee_name) {
    window.location.reload();
  }


  add_task = function(employee_name) {
    var task_name = $('select[id="new_task_for_' + employee_name + '"]').val();
    var workload = $(':input[id="new_workload_for_' + employee_name + '"]').val();

    $.ajax({
      url: "/api/map_task_to_employee?" + encode_query_data({
        "employee_name": employee_name,
        "task_name": task_name,
        "workload": workload
      }),
      success: function(data) {
        task_added(employee_name);
      },
    });
  }

  task_added = function(employee_name) {
    window.location.reload();
  }


  del_task_from_employee = function(task_name, employee_name) {
    $.ajax({
      url: "/api/del_task_from_employee?" + encode_query_data({
        "employee_name": employee_name,
        "task_name": task_name
      }),
      success: function(data) {
        task_deleted(employee_name);
      },
    });
  }

  task_deleted = function(employee_name) {
    window.location.reload();
  }


  set_working_for_employee = function(employee_name) {
    var working = $(':input[type=checkbox, id="check_working_' + employee_name + '"]:checked').val() !== undefined;

    $.ajax({
      url: "/api/set_working_for_employee?" + encode_query_data({
        "employee_name": employee_name,
        "working": working
      }),
      success: function(data) {
        working_for_employee_set(employee_name);
      },
    });
  }

  working_for_employee_set = function(employee_name) {
    window.location.reload();
  }

%h1
  Manage Employees
%div
  - if engine.get_all_employees.empty?
    No employees defined yet.
  - else
    %table
      %tr
        %th Name
        %th Tasks
      - engine.get_all_employees.each do |employee|
        %tr
          %td
            %div
              #{employee[:name]}
            %div
              - if employee[:working]
                %input{:id => "check_working_#{employee[:name]}", :type => "checkbox", :checked => "checked", :onchange => "set_working_for_employee(\"#{employee[:name]}\")"} working
              - else
                %input{:id => "check_working_#{employee[:name]}", :type => "checkbox", :onchange => "set_working_for_employee(\"#{employee[:name]}\")"} working
            %div
              %input{:type => "submit", :value => "Delete", :onclick => "del_employee(\"#{employee[:name]}\")"}
          %td
            %table
              %tr
                %th Task
                %th Workload
              - engine.get_tasks_per_employee(employee[:name]).each do |task|
                %tr
                  %td
                    #{task[0]}
                    %input{:type => "submit", :value => "Delete", :onclick => "del_task_from_employee(\"#{task[0]}\", \"#{employee[:name]}\")"}

                  %td #{task[1]}
              %tr
                %td
                  %select{:id => "new_task_for_" + employee[:name]}
                    - engine.get_tasks.each do |task|
                      %option
                        #{task[:name]}

                %td
                  %input{:id => "new_workload_for_" + employee[:name], :type => "text"}
                  %input{:type => "submit", :value => "Add", :onclick => "add_task(\"#{employee[:name]}\")"}

%p

%div
  %label{:for => "new_employee_name"} Name:
  %input{:type => "text", :id => "new_employee_name"}
  %input{:type => "submit", :value => "Add", :onclick => "add_employee()"}